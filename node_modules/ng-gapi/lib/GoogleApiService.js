import { Observable } from "rxjs/Observable";
import { Inject, Injectable, InjectionToken } from "@angular/core";
import { GoogleApiConfig } from "./config/GoogleApiConfig";
export var NG_GAPI_CONFIG = new InjectionToken("ng-gapi.config");
var GoogleApiService = /** @class */ (function () {
    function GoogleApiService(config) {
        this.gapiUrl = 'https://apis.google.com/js/api.js';
        this.config = new GoogleApiConfig(config);
        this.loadGapi().subscribe();
    }
    GoogleApiService.prototype.onLoad = function () {
        return this.loadGapi();
    };
    GoogleApiService.prototype.getConfig = function () {
        return this.config;
    };
    GoogleApiService.prototype.loadGapi = function () {
        var _this = this;
        return new Observable(function (observer) {
            var node = document.createElement('script');
            node.src = _this.gapiUrl;
            node.type = 'text/javascript';
            node.charset = 'utf-8';
            document.getElementsByTagName('head')[0].appendChild(node);
            node.onload = function () {
                observer.next(true);
                observer.complete();
            };
        });
    };
    GoogleApiService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    GoogleApiService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [NG_GAPI_CONFIG,] },] },
    ]; };
    return GoogleApiService;
}());
export { GoogleApiService };
